@model Tools.Models.ProjectTaskViewModel
@{ 
    var task = Model.Task;
    var hasComments = Model.Comments.Count > 0;
    var hasCompletionLink = !string.IsNullOrWhiteSpace(task.CompletionUrl);
    var assignedDisplay = string.IsNullOrWhiteSpace(Model.AssignedUserDisplayName)
        ? "Unassigned"
        : Model.AssignedUserDisplayName;
    var assignedEmail = Model.AssignedUserEmail;
}

<article class="task-card" data-task-id="@task.Id" data-task-status="@task.Status" data-assigned-user-id="@(task.AssignedUserId ?? string.Empty)">
    <div class="task-header">
        <h4 class="task-title">@task.Title</h4>
        <div class="task-header-actions">
            <span class="task-status">@task.Status</span>
            <a class="task-git-indicator" data-git-indicator href="@(hasCompletionLink ? task.CompletionUrl : "#")" target="_blank" rel="noopener" aria-label="Open completion repository link" @(hasCompletionLink ? null : "hidden")>
                <svg class="task-git-icon" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                    <path d="M12 0C5.37 0 0 5.37 0 12a12 12 0 008.21 11.43c.6.11.82-.26.82-.58v-2.02c-3.34.73-4.04-1.61-4.04-1.61-.55-1.4-1.34-1.77-1.34-1.77-1.09-.75.08-.74.08-.74 1.2.08 1.83 1.23 1.83 1.23 1.07 1.83 2.81 1.3 3.5.99.11-.78.42-1.3.76-1.6-2.67-.3-5.47-1.34-5.47-5.94 0-1.31.47-2.38 1.24-3.22-.12-.3-.54-1.52.12-3.17 0 0 1-.32 3.3 1.23a11.4 11.4 0 016 0c2.28-1.55 3.28-1.23 3.28-1.23.67 1.65.25 2.87.12 3.17.77.84 1.23 1.91 1.23 3.22 0 4.61-2.81 5.63-5.49 5.92.43.37.81 1.1.81 2.23v3.31c0 .32.21.7.82.58A12 12 0 0024 12C24 5.37 18.63 0 12 0z" />
                </svg>
            </a>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(task.Description))
    {
        <p class="task-description">@task.Description</p>
    }

    <dl class="task-meta">
        <div class="task-estimate" data-estimate-container>
            <dt>Estimated time</dt>
            <dd>
                @if (Model.CanEditEstimatedHours)
                {
                    <form class="task-estimate-form" data-estimate-form>
                        <div class="task-estimate-input-group">
                            <input
                                type="number"
                                step="0.25"
                                min="0"
                                class="task-estimate-input"
                                data-estimate-input
                                value="@(task.EstimatedHours?.ToString("0.##") ?? string.Empty)"
                                placeholder="Enter hours" />
                            <button type="submit" class="task-estimate-save" data-estimate-save>Save</button>
                            <button type="button" class="task-estimate-clear" data-estimate-clear @(task.EstimatedHours.HasValue ? null : "hidden")>Clear</button>
                        </div>
                        <p class="task-estimate-helper">Current: <span data-estimate-display>@(task.EstimatedHours.HasValue ? $"{task.EstimatedHours.Value:0.##} hours" : "Not set")</span></p>
                        <p class="task-estimate-status" data-estimate-status hidden></p>
                    </form>
                }
                else
                {
                    <span data-estimate-display>@(task.EstimatedHours.HasValue ? $"{task.EstimatedHours.Value:0.##} hours" : "Not set")</span>
                }
            </dd>
        </div>
        <div class="task-assignment" data-assignment>
            <dt>Assigned to</dt>
            <dd>
                <div class="task-assignee-info">
                    <span class="task-assignee-display" data-assignee-display>@assignedDisplay</span>
                    <span class="task-assignee-email" data-assignee-email @(string.IsNullOrWhiteSpace(assignedEmail) ? "hidden" : null)>@assignedEmail</span>
                </div>
                @if (Model.CanManageAssignments)
                {
                    <select class="task-assignee-select" data-assignee-select>
                        <option value="">Unassigned</option>
                        @foreach (var member in Model.AvailableMembers)
                        {
                            <option value="@member.UserId" selected="@(string.Equals(member.UserId, task.AssignedUserId, System.StringComparison.Ordinal) ? bool.TrueString : null)">@member.DisplayName</option>
                        }
                    </select>
                }
            </dd>
        </div>
        @if (task.CompletedAt.HasValue)
        {
            <div>
                <dt>Completion date</dt>
                <dd>@task.CompletedAt.Value.ToString("yyyy/MM/dd HH:mm")</dd>
            </div>
        }
        <div data-completion-section @(hasCompletionLink ? null : "hidden")>
            <dt>Completion link</dt>
            <dd>
                <a class="task-link" data-completion-link href="@(hasCompletionLink ? task.CompletionUrl : "#")" target="_blank" rel="noopener">View</a>
            </dd>
        </div>
    </dl>

    <section class="task-comments" data-comment-section>
        <header class="task-comments-header">
            <h5 class="task-comments-title">Comments</h5>
        </header>
        <p class="task-comments-empty" data-comments-empty @(hasComments ? "hidden" : null)>No comments yet.</p>
        <ul class="task-comment-list" data-comment-list>
            @foreach (var comment in Model.Comments)
            {
                <li class="task-comment" data-comment-id="@comment.Id">
                    <div class="task-comment-header">
                        <span class="task-comment-author">@comment.AuthorName</span>
                        <time class="task-comment-timestamp" datetime="@comment.CreatedAt.ToUniversalTime().ToString("O")">@comment.CreatedAt.ToLocalTime().ToString("yyyy/MM/dd HH:mm")</time>
                    </div>
                    <p class="task-comment-body">@comment.Content</p>
                </li>
            }
        </ul>
        @if (Model.CanComment)
        {
            <form class="task-comment-form" data-comment-form>
                <label class="task-comment-label" for="comment-task-@task.Id">Add a comment</label>
                <textarea id="comment-task-@task.Id" name="comment" class="task-comment-input" rows="3" maxlength="500" placeholder="Share an update..." required></textarea>
                <div class="task-comment-actions">
                    <button type="submit" class="task-comment-submit">Post comment</button>
                </div>
            </form>
        }
    </section>
</article>
